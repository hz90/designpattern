
面向对象三大基本特性

封装
封装是把过程和数据包围起来，对数据的访问只能通过已定义的界面。

继承
继承是一种类的层次模型，并且允许和鼓励类的重用，它提供了一种明确表述共性的方法。

多态
多态性是指允许不同类的对象对同一消息作出响应。多态性包括编译时多态和运行时多态。 
主要作用就是用来将接口和实现分离开，改善代码的组织结构，增强代码的可读性。 
在某些很简单的情况下，或许我们不使用多态也能开发出满足我们需要的程序，但大多数情况，如果没有多态，就会觉得代码极其难以维护。

类和类之间存在着如下关系

依赖关系
关联关系
聚合关系
组合关系
继承关系
实现关系

依赖关系：
         1.将A类作为B类中某个方法的参数     B类中public void test(A a){}
         2.A类是B类某个方法中的局部变量 B类public void test(){A a=new A();}
         3.A类中的某个方法中调用B类中的静态方法   B类 public void test1(){A.callA();}
 driver开car
 car作为driver中drive（car car）的参数，以便在drive中调用car中的run（）方法，driver依赖car
 
关联关系：
         1.
